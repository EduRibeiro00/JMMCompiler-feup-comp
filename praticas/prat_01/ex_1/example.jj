PARSER_BEGIN(Example)
// Java code invoking the parser
public class Example {
 public static void main(String args[]) throws ParseException {
// Object instantiation using the constructor with an argument
// that reads from the standard input (keyboard)
 Example parser = new Example(System.in);
 parser.Aritm();
 }
}
PARSER_END(Example)
// Symbols that must be skipped during the lexical analysis
SKIP :
{
" " | "\t" | "\r"
}
// token definition (terminal symbols)
TOKEN :
{
< INTEGER : (["0" - "9"])+ >
| < LF : "\n" >
| < OP: ("+" | "-") >
}
// Production definition
void Aritm() : {Token t1, t2, op;}
{
t1=<INTEGER> {
System.out.println("Integer = "+t1.image);
}
( op = <OP> {
System.out.println("Operator = "+op.image);
} 
t2=<INTEGER> {
System.out.println("Integer = "+t2.image);
}
)? (<LF>)
}